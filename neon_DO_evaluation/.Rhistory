mins
mins = as.POSIXct(tapply(d$time, d$site, min), origin=as.Date('1970-01-01'))
library(lubridate)
tz(mins)
mins = as.POSIXct(tapply(d$time, d$site, min), origin=as.Date('1970-01-01'))
tz(mins)
tz(mins) = 'UTC'
mins
mins = as.POSIXct(tapply(d$time, d$site, min), origin=as.Date('1970-01-01'))
mins
class(mins)
typeof(mins)
str(mins)
as.data.frame(mins)
as.data.frame(t(mins))
t(as.data.frame(mins))
mins = t(as.data.frame(mins))
colnames(mins)
mins = as.data.frame(mins)
mins = as.POSIXct(tapply(d$time, d$site, min), origin=as.Date('1970-01-01'))
mins = as.data.frame(mins)
colnames(mins)
mins
tz(mins$mins) = 'UTC'
mins$mins
mins = as.POSIXct(tapply(d$time, d$site, min), origin=as.Date('1970-01-01'))
maxes = as.POSIXct(tapply(d$time, d$site, max), origin=as.Date('1970-01-01'))
maxes
rbind(mins, maxes)
cbind(mins, maxes)
mms = cbind(mins, maxes)
mins = as.data.frame(mms)
mins = as.POSIXct(tapply(d$time, d$site, min), origin=as.Date('1970-01-01'))
maxes = as.POSIXct(tapply(d$time, d$site, max), origin=as.Date('1970-01-01'))
mms = cbind(mins, maxes)
out = as.data.frame(mms)
out
mins = as.POSIXct(tapply(d$time, d$site, min), origin=as.Date('1970-01-01'))
maxes = as.POSIXct(tapply(d$time, d$site, max), origin=as.Date('1970-01-01'))
mms = cbind(mins, maxes)
mms
mins = tapply(d$time, d$site, min)
maxes = tapply(d$time, d$site, max)
mms = cbind(mins, maxes)
mms
mms = as.POSIXct(mms, origin=as.Date('1970-01-01'))
mms
mins = tapply(d$time, d$site, min)
maxes = tapply(d$time, d$site, max)
mms = cbind(mins, maxes)
out = as.data.frame(mms)
out
out = as.POSIXct(out, origin=as.Date('1970-01-01'))
out = apply(out, 2, function(x) as.POSIXct(x, origin=as.Date('1970-01-01')))
out
mins = tapply(d$time, d$site, min)
maxes = tapply(d$time, d$site, max)
mms = cbind(mins, maxes)
mms
maxes
out = as.data.frame(mms)
out
as.POSIXct(out$mins, origin=as.Date('1970-01-01'))
out$mins = as.POSIXct(out$mins, origin=as.Date('1970-01-01'))
out$mins
out
out = as.data.frame(mms)
out = lapply(out, function(x) as.POSIXct(x, origin=as.Date('1970-01-01')))
out
mms = cbind(mins, maxes)
out = lapply(mms, function(x) as.POSIXct(x, origin=as.Date('1970-01-01')))
out
out = lapply(mms, function(x) as.POSIXct(x, origin=as.Date('1970-01-01')),
SIMPLIFY=TRUE)
out = lapply(mms, function(x) as.POSIXct(x, origin=as.Date('1970-01-01')),
simplify=TRUE)
out = lapply(mms, function(x) {as.POSIXct(x, origin=as.Date('1970-01-01'))},
simplify=TRUE)
out = sapply(mms, function(x) {as.POSIXct(x, origin=as.Date('1970-01-01'))},
simplify=TRUE)
out
mms = cbind(mins, maxes)
out = apply(mms, 2, function(x) as.POSIXct(x, origin=as.Date('1970-01-01')))
out
mms = cbind(mins, maxes)
mms = apply(mms, 2, function(x) as.POSIXct(x, origin=as.Date('1970-01-01')))
out = as.data.frame(mms)
out$mins = as.POSIXct(out$mins, origin=as.Date('1970-01-01'))
out$maxes = as.POSIXct(out$maxes, origin=as.Date('1970-01-01'))
out
colnames(mins)
colnames(out)
tz(mins$mins) = 'UTC'
tz(out$mins) = 'UTC'
out
tz(out$maxes) = 'UTC'
out$maxes - out$mins
(out$maxes - out$mins) / 24
as.numeric(out$maxes - out$mins) / 24
floor(as.numeric(out$maxes - out$mins) / 24)
out$nFullDays = floor(as.numeric(out$maxes - out$mins) / 24)
out
out$deployTime_days = floor(as.numeric(out$maxes - out$mins) / 24)
out
d$val
sum(is.na(d$val))
View(d)
str(d)
d$time
tapply(d$time[d$site == 'ARIK'], substr(d$time[d$site == 'ARIK'], 1, 10), length)
substr(d$time[d$site == 'ARIK'], 1, 10)
d$time[d$site == 'ARIK']
unique(d$site)
tapply(d$time[d$site == 'ARIK-up'], substr(d$time[d$site == 'ARIK-up'], 1, 10), length)
o = tapply(d$time[d$site == 'ARIK-up'], substr(d$time[d$site == 'ARIK-up'], 1, 10), length)
table(o0
table(o)
o = tapply(d$time[d$site == 'ARIK-down'], substr(d$time[d$site == 'ARIK-down'], 1, 10), length)
table(o)
o = tapply(d$time[d$site == 'WALK-down'], substr(d$time[d$site == 'WALK-down'], 1, 10), length)
table(o)
plot(d$time[d$site == 'WALK-down'], d$val[d$site == 'WALK-down'], type='l')
dev.off()
x11()
plot(d$time[d$site == 'WALK-down'], d$val[d$site == 'WALK-down'], type='l')
tapply(d$time[d$site == 'WALK-down'], substr(d$time[d$site == 'WALK-down'], 1, 10), length)
plot(d$time[d$site == 'WALK-down' & substr(d$time, 1, 7) == '2016-08'],
d$val[d$site == 'WALK-down' & substr(d$time, 1, 7) == '2016-08'],
type='l')
d$time[d$site == 'WALK-down' & substr(d$time, 1, 7) == '2016-08'
]
dd = d[d$site == 'WALK-down' & substr(d$time, 1, 7) == '2016-08',]
plot(dd$time, dd$val type='l')
plot(dd$time, dd$val, type='l')
nrow(d[d$site == 'WALK-down'])
nrow(d[d$site == 'WALK-down',])
sum(o)
o
dd = d[d$site == 'WALK-down' & substr(d$time, 1, 10) == '2016-08-12',]
plot(dd$time, dd$val, type='l')
par(mfrow=c(2,1))
plot(1,1)
dd = d[d$site == 'WALK-down' & substr(d$time, 1, 10) == '2016-08-12',]
plot(dd$time, dd$val, type='l')
dd = d[d$site == 'WALK-down' & substr(d$time, 1, 10) == '2016-08-13',]
plot(dd$time, dd$val, type='l')
dd = d[d$site == 'WALK-down' & substr(d$time, 1, 10) == '2016-08-12',]
plot(dd$time, dd$val, type='p')
dd = d[d$site == 'WALK-down' & substr(d$time, 1, 10) == '2016-08-13',]
plot(dd$time, dd$val, type='p')
table(o)
o
dd = d[d$site == 'WALK-down' & substr(d$time, 1, 10) == '2016-08-18',]
plot(dd$time, dd$val, type='p')
dd = d[d$site == 'WALK-down' & substr(d$time, 1, 10) == '2016-08-31',]
plot(dd$time, dd$val, type='p')
plot(1,1, xaxs='n')
plot(1,1, xaxs=FALSE)
plot(1,1, xaxt=FALSE)
plot(1,1, xaxt=NA)
plot(1,1, xaxt='n')
par(mfrow=c(2,1), mar=c(0,4,0,4))
dd = d[d$site == 'WALK-down' & substr(d$time, 1, 10) == '2016-08-12',]
plot(dd$time, dd$val, type='p', pch=20, xaxt='n', xlab='', ylab='')
mtext('DO (mgL)', 2, outer=TRUE)
mtext('Date', 1, outer=TRUE)
par(mfrow=c(4,1), mar=c(0,0,0,0), oma=4,4,4,4)
dd = d[d$site == 'WALK-down' & substr(d$time, 1, 10) == '2016-08-12',]
par(mfrow=c(4,1), mar=c(0,0,0,0), oma=c(4,4,4,4)
dd = d[d$site == 'WALK-down' & substr(d$time, 1, 10) == '2016-08-12',]
plot(dd$time, dd$val, type='p', pch=20, xaxt='n', xlab='', ylab='')
par(mfrow=c(4,1), mar=c(0,0,0,0), oma=c(4,4,4,4)
dd = d[d$site == 'WALK-down' & substr(d$time, 1, 10) == '2016-08-12',]
par(mfrow=c(4,1), mar=c(0,0,0,0), oma=c(4,4,4,4))
dd = d[d$site == 'WALK-down' & substr(d$time, 1, 10) == '2016-08-12',]
plot(dd$time, dd$val, type='p', pch=20, xaxt='n', xlab='', ylab='')
mtext('DO (mgL)', 2, outer=TRUE)
mtext('Date', 1, outer=TRUE)
par(mfrow=c(4,1), mar=c(0,4,0,0), oma=c(4,4,4,4))
dd = d[d$site == 'WALK-down' & substr(d$time, 1, 10) == '2016-08-12',]
plot(dd$time, dd$val, type='p', pch=20, xaxt='n', xlab='', ylab='')
mtext('DO (mgL)', 2, outer=TRUE)
mtext('Date', 1, outer=TRUE)
dd = d[d$site == 'WALK-down' & substr(d$time, 1, 10) == '2016-08-13',]
plot(dd$time, dd$val, type='p', pch=20, xaxt='n', xlab='', ylab='')
plot(1,1)
par(mfrow=c(4,1), mar=c(0,4,0,0), oma=c(8,4,4,4))
plot(1,1)
mtext('Date', 1, outer=TRUE)
mtext('Date', 1, outer=TRUE, line=3)
par(mfrow=c(4,1), mar=c(0,4,0,0), oma=c(4,4,4,4))
plot(1,1)
par(mfrow=c(4,1), mar=c(0,4,0,0), oma=c(4,4,4,4))
plot(1,1)
mtext('Date', 1, outer=TRUE, line=3)
par(mfrow=c(4,1), mar=c(0,4,0,0), oma=c(6,4,4,4))
dd = d[d$site == 'WALK-down' & substr(d$time, 1, 10) == '2016-08-12',]
plot(dd$time, dd$val, type='p', pch=20, xaxt='n', xlab='', ylab='')
axis(1)
dd = d[d$site == 'WALK-down' & substr(d$time, 1, 10) == '2016-08-31',]
plot(dd$time, dd$val, type='p', pch=20, xaxt='n', xlab='', ylab='')
axis(1)
dd = d[d$site == 'WALK-down' & substr(d$time, 1, 10) == '2016-08-31',]
plot(dd$time, dd$val, type='p', pch=20, xlab='', ylab='')
dd$time[1]
par(mfrow=c(4,1), mar=c(0,4,0,0), oma=c(6,4,4,4))
dd = d[d$site == 'WALK-down' & substr(d$time, 1, 10) == '2016-08-31',]
plot(dd$time, dd$val, type='p', pch=20, xlab='', ylab='')
dd = d[d$site == 'WALK-down' & substr(d$time, 1, 10) == '2016-08-12',]
plot(dd$time, dd$val, type='p', pch=20, xlab='', ylab='')
legend('topright', '2016-08-12')
legend('topright', '2016-08-12', bty='n')
par(mfrow=c(4,1), mar=c(0,4,0,0), oma=c(6,4,4,4))
dd = d[d$site == 'WALK-down' & substr(d$time, 1, 10) == '2016-08-12',]
plot(dd$time, dd$val, type='p', pch=20, xaxt='n', xlab='', ylab='')
legend('topright', '2016-08-12', bty='n')
dd = d[d$site == 'WALK-down' & substr(d$time, 1, 10) == '2016-08-13',]
plot(dd$time, dd$val, type='p', pch=20, xaxt='n', xlab='', ylab='')
legend('topright', '2016-08-13', bty='n')
dd = d[d$site == 'WALK-down' & substr(d$time, 1, 10) == '2016-08-18',]
plot(dd$time, dd$val, type='p', pch=20, xaxt='n', xlab='', ylab='')
legend('topright', '2016-08-18', bty='n')
dd = d[d$site == 'WALK-down' & substr(d$time, 1, 10) == '2016-08-31',]
plot(dd$time, dd$val, type='p', pch=20, xlab='', ylab='')
legend('topright', '2016-08-31', bty='n')
mtext('DO (mgL)', 2, outer=TRUE)
mtext('Time', 1, outer=TRUE, line=3)
o
par(mfrow=c(4,1), mar=c(0,4,0,0), oma=c(6,4,4,4))
dd = d[d$site == 'WALK-down' & substr(d$time, 1, 10) == '2016-08-13',]
plot(dd$time, dd$val, type='p', pch=20, xaxt='n', xlab='', ylab='')
legend('topright', '2016-08-13', bty='n')
dd = d[d$site == 'WALK-down' & substr(d$time, 1, 10) == '2016-08-18',]
plot(dd$time, dd$val, type='p', pch=20, xaxt='n', xlab='', ylab='')
legend('topright', '2016-08-18', bty='n')
dd = d[d$site == 'WALK-down' & substr(d$time, 1, 10) == '2016-08-26',]
pdf(width=5, height=7, file='~/Dropbox/streampulse/figs/NEON_gaps.pdf',
compress=FALSE)
par(mfrow=c(4,1), mar=c(0,4,0,0), oma=c(6,4,4,4))
dd = d[d$site == 'WALK-down' & substr(d$time, 1, 10) == '2016-08-13',]
plot(dd$time, dd$val, type='p', pch=20, xaxt='n', xlab='', ylab='')
legend('topright', '2016-08-13', bty='n')
dd = d[d$site == 'WALK-down' & substr(d$time, 1, 10) == '2016-08-18',]
plot(dd$time, dd$val, type='p', pch=20, xaxt='n', xlab='', ylab='')
legend('topright', '2016-08-18', bty='n')
dd = d[d$site == 'WALK-down' & substr(d$time, 1, 10) == '2016-08-26',]
plot(dd$time, dd$val, type='p', pch=20, xaxt='n', xlab='', ylab='')
legend('topright', '2016-08-26', bty='n')
dd = d[d$site == 'WALK-down' & substr(d$time, 1, 10) == '2016-08-31',]
plot(dd$time, dd$val, type='p', pch=20, xlab='', ylab='')
legend('topright', '2016-08-31', bty='n')
mtext('DO (mgL)', 2, outer=TRUE)
mtext('Time', 1, outer=TRUE, line=3)
dev.off()
out$deployTime_days
table(o)
o
unique(d$site)
coverage = lapply(unique(d$site), FUN=function(x){
samp_per_day = tapply(d$time[d$site == x], substr(d$time[d$site == x],1,10), length)
nFullDays = sum(samp_per_day == 1440)
coverage_full = nFullDays / length(samp_per_day)
n240SampGapDays = sum(samp_per_day == 1440)
coverage_240Gap = n240SampGapDays / length(samp_per_day)
})
coverage
coverage = lapply(unique(d$site)[1], FUN=function(x){
samp_per_day = tapply(d$time[d$site == x], substr(d$time[d$site == x],1,10), length)
nFullDays = sum(samp_per_day == 1440)
coverage_full = nFullDays / length(samp_per_day)
n240SampGapDays = sum(samp_per_day == 1440)
coverage_240Gap = n240SampGapDays / length(samp_per_day)
})
coverage
coverage = lapply(unique(d$site)[1], FUN=function(x){
samp_per_day = tapply(d$time[d$site == x], substr(d$time[d$site == x],1,10), length)
nFullDays = sum(samp_per_day == 1440)
coverage_full = nFullDays / length(samp_per_day)
n240SampGapDays = sum(samp_per_day == 1440)
coverage_240Gap = n240SampGapDays / length(samp_per_day)
return(list(nFullDays, coverage_full, n240SampGapDays, coverage_240Gap))
})
coverage
coverage = lapply(unique(d$site)[1:2], FUN=function(x){
samp_per_day = tapply(d$time[d$site == x], substr(d$time[d$site == x],1,10), length)
nFullDays = sum(samp_per_day == 1440)
coverage_full = nFullDays / length(samp_per_day)
n240SampGapDays = sum(samp_per_day == 1440)
coverage_240Gap = n240SampGapDays / length(samp_per_day)
return(list(nFullDays, coverage_full, n240SampGapDays, coverage_240Gap))
})
coverage
coverage = sapply(unique(d$site)[1:2], FUN=function(x){
samp_per_day = tapply(d$time[d$site == x], substr(d$time[d$site == x],1,10), length)
nFullDays = sum(samp_per_day == 1440)
coverage_full = nFullDays / length(samp_per_day)
n240SampGapDays = sum(samp_per_day == 1440)
coverage_240Gap = n240SampGapDays / length(samp_per_day)
return(list(nFullDays, coverage_full, n240SampGapDays, coverage_240Gap))
})
coverage
coverage = sapply(unique(d$site)[1:2], FUN=function(x){
samp_per_day = tapply(d$time[d$site == x], substr(d$time[d$site == x],1,10), length)
nFullDays = sum(samp_per_day == 1440)
coverage_full = nFullDays / length(samp_per_day)
n240SampGapDays = sum(samp_per_day == 1200)
coverage_240Gap = n240SampGapDays / length(samp_per_day)
return(list(nFullDays, coverage_full, n240SampGapDays, coverage_240Gap))
})
coverage
coverage = sapply(unique(d$site)[1:2], FUN=function(x){
samp_per_day = tapply(d$time[d$site == x], substr(d$time[d$site == x],1,10), length)
nFullDays = sum(samp_per_day == 1440)
coverage_full = nFullDays / length(samp_per_day)
nFullAnd240SampGapDays = sum(samp_per_day == 1200 | samp_per_day == 1440)
coverage_fullAndPartial = nFullAnd240SampGapDays / length(samp_per_day)
return(list(nFullDays, coverage_full, n240SampGapDays, coverage_240Gap))
})
coverage = sapply(unique(d$site)[1:2], FUN=function(x){
samp_per_day = tapply(d$time[d$site == x], substr(d$time[d$site == x],1,10), length)
nFullDays = sum(samp_per_day == 1440)
coverage_full = nFullDays / length(samp_per_day)
nFullAnd240SampGapDays = sum(samp_per_day == 1200 | samp_per_day == 1440)
coverage_fullAndPartial = nFullAnd240SampGapDays / length(samp_per_day)
return(list(nFullDays, coverage_full, nFullAnd240SampGapDays,
coverage_fullAndPartial))
})
coverage
coverage = sapply(unique(d$site), FUN=function(x){
samp_per_day = tapply(d$time[d$site == x], substr(d$time[d$site == x],1,10), length)
nFullDays = sum(samp_per_day == 1440)
coverage_full = nFullDays / length(samp_per_day)
nFullAnd240SampGapDays = sum(samp_per_day == 1200 | samp_per_day == 1440)
coverage_fullAndPartial = nFullAnd240SampGapDays / length(samp_per_day)
return(list(nFullDays, coverage_full, nFullAnd240SampGapDays,
coverage_fullAndPartial))
})
coverage
t(coverage)
coverage = t(coverage)
colnames(coverage) = c('nFullDays', 'coverage_full', 'nFullAnd240SampGapDays',
'coverage_fullAndPartial')
coverage
240/1440
del(out$nFullDays)
rm(out$nFullDays)
out$nFullDays = NULL
coverage
out
merge(out, coverage, by='row.names')
merge(out, coverage, by='row.names')[1:10,]
out = merge(out, coverage, by='row.names')
out$mins = NULL
out$maxes = NULL
out$nFullDays$`CARI-down`
head(out)
View(out)
out$nFullDays$`ARIK-down`
out$Row.names
colnames(out)[1] = 'site'
setwd('~/git/streampulse/other_projects/neon_DO_evaluation/')
write.csv(out, 'NEON_DO_coverage_summary.csv')
class(out)
ooo = out
unlist(out$nFullDays)
out = apply(out, 2, unlist)
out
out = ooo
as.data.frame(out$nFullDays)
as.data.frame(out[,4])
as.data.frame(out[,4,drop=FALSE])
out = apply(out, 2, function(x) as.data.frame(x))
out$nFullDays
View(out)
out = ooo
out = apply(out, 2, function(x) data.frame(matrix(unlist(x))))
out$nFullDays
View(out)
out = ooo
out = apply(out, 2, function(x) data.frame(matrix(unlist(x))))
out = ooo
out = apply(out, 2, function(x) as.vector(unlist(x)))
out = ooo
out$nFullDays = data.frame(matrix(unlist(out$nFullDays), nrow=nrow(df), byrow=T))
out = ooo
out$nFullDays = data.frame(matrix(unlist(out$nFullDays), nrow=nrow(out), byrow=T))
out$nFullDays
out = ooo
class(out$nFullDays)
class(out$site)
out = ooo
out = apply(out, 2, function(x) I(x))
write.csv(out, 'NEON_DO_coverage_summary.csv')
out$coverage_full = round(out$coverage_full, 2)
out$coverage_full
lapply(out$coverage_full, round, 2)
out$coverage_full = lapply(out$coverage_full, round, 2)
out$coverage_fullAndPartial = lapply(out$coverage_fullAndPartial, round, 2)
write.csv(out, 'NEON_DO_coverage_summary.csv', row.names=FALSE)
out = ooo
out = apply(out, 2, function(x) I(x))
out$coverage_full = sapply(out$coverage_full, round, 2)
out$coverage_fullAndPartial = sapply(out$coverage_fullAndPartial, round, 2)
write.csv(out, 'NEON_DO_coverage_summary.csv', row.names=FALSE)
barplot(out$nFullDays)
barplot(as.vector(out$nFullDays))
as.vector(out$nFullDays)
out = apply(out, 2, sapply)
apply(out[,1:3], 2, sapply)
apply(out$nFullDays, 2, sapply)
out$site = sapply(out$site)
out$site = sapply(out$site, function(x) print(''))
out$deployTime_days = sapply(out$deployTime_days, function(x))
out$deployTime_days = sapply(out$deployTime_days, function(x){})
out$deployTime_days = sapply(out$deployTime_days, function(x) print(''))
out$nFullDays = sapply(out$nFullDays, function(x) print(''))
out$nFullAnd240SampGapDays = sapply(out$nFullAnd240SampGapDays, function(x) print(''))
barplot(as.vector(out$nFullDays))
out$nFullDays
out = ooo
out = apply(out, 2, function(x) I(x))
out$coverage_full = sapply(out$coverage_full, round, 2)
out$coverage_fullAndPartial = sapply(out$coverage_fullAndPartial, round, 2)
out$site = sapply(out$site, function(x) return(x))
out$site
out$deployTime_days = sapply(out$deployTime_days, function(x) return(x))
out$nFullDays = sapply(out$nFullDays, function(x) return(x))
out$nFullAnd240SampGapDays = sapply(out$nFullAnd240SampGapDays, function(x) return(x))
barplot(as.vector(out$nFullDays))
par(mfrow=c(1,1))
barplot(out$nFullDays)
barplot(as.matrix(out[,c(2,3,5)]))
as.matrix(out[,c(2,3,5)])
out[,c(2,3,5)]
out
barplot(as.matrix(out[c(2,3,5)]))
out[c(2,3,5)]
as.matrix(out[c(2,3,5)])
as.data.frame(out[c(2,3,5)])
barplot(as.matrix(as.data.frame(out[c(2,3,5)])))
barplot(as.matrix(as.data.frame(out[c(2,3,5)])), beside=TRUE)
as.matrix(as.data.frame(out[c(1,2,3,5)]))
zz = t(as.matrix(as.data.frame(out[c(1,2,3,5)])))
barplot(zz, beside=TRUE)
zz
zz = t(as.matrix(as.data.frame(out[c(2,3,5)])))
barplot(zz, beside=TRUE)
out$site
barplot(zz, beside=TRUE, names.arg=out$site)
barplot(zz, beside=TRUE, names.arg=out$site, las=2)
zz
barplot(zz, beside=TRUE, names.arg=out$site, las=2, legend.text=c(rownames(zz))
barplot(zz, beside=TRUE, names.arg=out$site, las=2, legend.text=rownames(zz))
barplot(zz, beside=TRUE, names.arg=out$site, las=2, legend.text=rownames(zz),
args.legend=list(x='topleft'))
args.legend=list(x='topleft', bty='n'))
barplot(zz, beside=TRUE, names.arg=out$site, las=2, legend.text=rownames(zz),
args.legend=list(x='topleft', bty='n'))
barplot(zz, beside=TRUE, names.arg=out$site, las=2, legend.text=rownames(zz),
args.legend=list(x='top', bty='n'))
barplot(zz, beside=TRUE, names.arg=out$site, las=2,
legend.text=c('deploy time (days)', '# full coverage days',
'# partial coverage days (regular gap of 240 samples)'),
args.legend=list(x='top', bty='n'))
barplot(zz, beside=TRUE, names.arg=out$site, las=3,
legend.text=c('deploy time (days)', '# full coverage days',
'# partial coverage days (regular gap of 240 samples)'),
args.legend=list(x='top', bty='n'))
barplot(zz, beside=TRUE, names.arg=out$site, las=4,
legend.text=c('deploy time (days)', '# full coverage days',
'# partial coverage days (regular gap of 240 samples)'),
args.legend=list(x='top', bty='n'))
barplot(zz, beside=TRUE, names.arg=out$site, las=2,
legend.text=c('deploy time (days)', '# full coverage days',
'# partial coverage days (regular gap of 240 samples)'),
args.legend=list(x='top', bty='n'))
barplot(zz, beside=TRUE, names.arg=out$site, las=2,
legend.text=c('deploy time (days)', '# full coverage days',
'# full and partial coverage days (regular gap of 240 samples)'),
args.legend=list(x='top', bty='n'))
pdf(width=8, height=5, file='~/Dropbox/streampulse/figs/NEON_DO_coverage.pdf',
compress=FALSE)
barplot(zz, beside=TRUE, names.arg=out$site, las=2,
legend.text=c('deploy time (days)', '# full coverage days',
'# full and partial coverage days (regular gap of 240 samples)'),
args.legend=list(x='top', bty='n'))
dev.off()
pdf(width=8, height=5, file='~/Dropbox/streampulse/figs/NEON_DO_coverage.pdf',
compress=FALSE)
barplot(zz, beside=TRUE, names.arg=out$site, las=2,
legend.text=c('deploy time (days)', '# full coverage days',
'# full and partial coverage days (regular gap of 240 samples)'),
args.legend=list(x='top', bty='n'), cex.names=0.7)
dev.off()
pdf(width=8, height=5, file='~/Dropbox/streampulse/figs/NEON_DO_coverage.pdf',
compress=FALSE)
barplot(zz, beside=TRUE, names.arg=out$site, las=2,
legend.text=c('deploy time (days)', '# full coverage days',
'# full and partial coverage days (regular gap of 240 samples)'),
args.legend=list(x='top', bty='n', cex=0.8), cex.names=0.7)
dev.off()
pdf(width=8, height=5, file='~/Dropbox/streampulse/figs/NEON_DO_coverage.pdf',
compress=FALSE)
barplot(zz, beside=TRUE, names.arg=out$site, las=2, main='NEON DO Coverage',
legend.text=c('deploy time (days)', '# full coverage days',
'# full and partial coverage days (regular gap of 240 samples)'),
args.legend=list(x='top', bty='n', cex=0.8), cex.names=0.7)
dev.off()
o
sum(o == 1200)
length(o)
48/193
